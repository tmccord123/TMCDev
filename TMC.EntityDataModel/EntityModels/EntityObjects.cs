//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_Requirement_AdditionalInfo", "AdditionalInfo", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EntityDataModel.EntityModels.AdditionalInfo), "Requirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.Requirement), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_Area_City", "City", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.City), "Area", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.Area), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingLocation_Area", "Area", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Area), "ListingLocation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingLocation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_Area", "Area", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EntityDataModel.EntityModels.Area), "ListingServiceLocation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingServiceLocation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_RequirementLocation_Area", "Area", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Area), "RequirementLocation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.RequirementLocation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_CategoryRelation_ChildCategory", "Category", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Category), "CategoryRelation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.CategoryRelation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_CategoryRelation_ParentCategory", "Category", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Category), "CategoryRelation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.CategoryRelation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingCategory_Category", "Category", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Category), "ListingCategory", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingCategory), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_RequirementCategory_Category", "Category", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Category), "RequirementCategory", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.RequirementCategory), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_City_State", "State", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.State), "City", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.City), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_Listing_City", "City", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.City), "Listing", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.Listing), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingLocation_City", "City", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.City), "ListingLocation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingLocation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_City", "City", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.City), "ListingServiceLocation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingServiceLocation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_RequirementLocation_City", "City", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.City), "RequirementLocation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.RequirementLocation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingContact_ContactType", "ContactType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.ContactType), "ListingContact", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingContact), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_Country", "Country", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Country), "ListingServiceLocation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingServiceLocation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_State_Country", "Country", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Country), "State", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.State), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_File_FileExtension", "FileExtension", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.FileExtension), "File", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.File), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_File_FileType", "FileType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.FileType), "File", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.File), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingMedia_File", "File", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.File), "ListingMedia", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingMedia), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_Listing_User", "User", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.User), "Listing", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.Listing), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingCategory_Listing", "Listing", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Listing), "ListingCategory", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingCategory), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingContact_Listing", "Listing", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Listing), "ListingContact", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingContact), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingLocation_Listing", "Listing", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Listing), "ListingLocation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingLocation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingMedia_Listing", "Listing", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Listing), "ListingMedia", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingMedia), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingPaymentMode_Listing", "Listing", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Listing), "ListingPaymentMode", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingPaymentMode), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_Listing", "Listing", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Listing), "ListingServiceLocation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingServiceLocation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingPaymentMode_PaymentMode", "PaymentMode", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.PaymentMode), "ListingPaymentMode", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingPaymentMode), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_State", "State", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.State), "ListingServiceLocation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.ListingServiceLocation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_Requirement_User", "User", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.User), "Requirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.Requirement), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_RequirementCategory_Requirement", "Requirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Requirement), "RequirementCategory", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.RequirementCategory), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_RequirementLocation_Requirement", "Requirement", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.Requirement), "RequirementLocation", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.RequirementLocation), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_User_UserType", "UserType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.UserType), "User", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.User), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_Trend_City", "City", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EntityDataModel.EntityModels.City), "Trend", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.Trend), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_Trend_Country", "Country", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EntityDataModel.EntityModels.Country), "Trend", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.Trend), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_Trend_State", "State", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EntityDataModel.EntityModels.State), "Trend", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.Trend), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_Trend_TrendType", "TrendType", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.TrendType), "Trend", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.Trend), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.AspNetUsers), "AspNetUserClaims", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.AspNetUserClaims), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityDataModel.EntityModels.AspNetUsers), "AspNetUserLogins", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.AspNetUserLogins), true)]
[assembly: EdmRelationshipAttribute("TMC.Entities.EntityModels", "AspNetUserRoles", "AspNetRoles", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.AspNetRoles), "AspNetUsers", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityDataModel.EntityModels.AspNetUsers))]

#endregion

namespace EntityDataModel.EntityModels
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TMCContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TMCContext object using the connection string found in the 'TMCContext' section of the application configuration file.
        /// </summary>
        public TMCContext() : base("name=TMCContext", "TMCContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TMCContext object.
        /// </summary>
        public TMCContext(string connectionString) : base(connectionString, "TMCContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TMCContext object.
        /// </summary>
        public TMCContext(EntityConnection connection) : base(connection, "TMCContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdditionalInfo> AdditionalInfo
        {
            get
            {
                if ((_AdditionalInfo == null))
                {
                    _AdditionalInfo = base.CreateObjectSet<AdditionalInfo>("AdditionalInfo");
                }
                return _AdditionalInfo;
            }
        }
        private ObjectSet<AdditionalInfo> _AdditionalInfo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Area> Area
        {
            get
            {
                if ((_Area == null))
                {
                    _Area = base.CreateObjectSet<Area>("Area");
                }
                return _Area;
            }
        }
        private ObjectSet<Area> _Area;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetRoles> AspNetRoles
        {
            get
            {
                if ((_AspNetRoles == null))
                {
                    _AspNetRoles = base.CreateObjectSet<AspNetRoles>("AspNetRoles");
                }
                return _AspNetRoles;
            }
        }
        private ObjectSet<AspNetRoles> _AspNetRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUserLogins> AspNetUserLogins
        {
            get
            {
                if ((_AspNetUserLogins == null))
                {
                    _AspNetUserLogins = base.CreateObjectSet<AspNetUserLogins>("AspNetUserLogins");
                }
                return _AspNetUserLogins;
            }
        }
        private ObjectSet<AspNetUserLogins> _AspNetUserLogins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Category
        {
            get
            {
                if ((_Category == null))
                {
                    _Category = base.CreateObjectSet<Category>("Category");
                }
                return _Category;
            }
        }
        private ObjectSet<Category> _Category;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryRelation> CategoryRelation
        {
            get
            {
                if ((_CategoryRelation == null))
                {
                    _CategoryRelation = base.CreateObjectSet<CategoryRelation>("CategoryRelation");
                }
                return _CategoryRelation;
            }
        }
        private ObjectSet<CategoryRelation> _CategoryRelation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> City
        {
            get
            {
                if ((_City == null))
                {
                    _City = base.CreateObjectSet<City>("City");
                }
                return _City;
            }
        }
        private ObjectSet<City> _City;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactType> ContactType
        {
            get
            {
                if ((_ContactType == null))
                {
                    _ContactType = base.CreateObjectSet<ContactType>("ContactType");
                }
                return _ContactType;
            }
        }
        private ObjectSet<ContactType> _ContactType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Country
        {
            get
            {
                if ((_Country == null))
                {
                    _Country = base.CreateObjectSet<Country>("Country");
                }
                return _Country;
            }
        }
        private ObjectSet<Country> _Country;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> File
        {
            get
            {
                if ((_File == null))
                {
                    _File = base.CreateObjectSet<File>("File");
                }
                return _File;
            }
        }
        private ObjectSet<File> _File;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileExtension> FileExtension
        {
            get
            {
                if ((_FileExtension == null))
                {
                    _FileExtension = base.CreateObjectSet<FileExtension>("FileExtension");
                }
                return _FileExtension;
            }
        }
        private ObjectSet<FileExtension> _FileExtension;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileType> FileType
        {
            get
            {
                if ((_FileType == null))
                {
                    _FileType = base.CreateObjectSet<FileType>("FileType");
                }
                return _FileType;
            }
        }
        private ObjectSet<FileType> _FileType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Listing> Listing
        {
            get
            {
                if ((_Listing == null))
                {
                    _Listing = base.CreateObjectSet<Listing>("Listing");
                }
                return _Listing;
            }
        }
        private ObjectSet<Listing> _Listing;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingCategory> ListingCategory
        {
            get
            {
                if ((_ListingCategory == null))
                {
                    _ListingCategory = base.CreateObjectSet<ListingCategory>("ListingCategory");
                }
                return _ListingCategory;
            }
        }
        private ObjectSet<ListingCategory> _ListingCategory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingContact> ListingContact
        {
            get
            {
                if ((_ListingContact == null))
                {
                    _ListingContact = base.CreateObjectSet<ListingContact>("ListingContact");
                }
                return _ListingContact;
            }
        }
        private ObjectSet<ListingContact> _ListingContact;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingLocation> ListingLocation
        {
            get
            {
                if ((_ListingLocation == null))
                {
                    _ListingLocation = base.CreateObjectSet<ListingLocation>("ListingLocation");
                }
                return _ListingLocation;
            }
        }
        private ObjectSet<ListingLocation> _ListingLocation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingMedia> ListingMedia
        {
            get
            {
                if ((_ListingMedia == null))
                {
                    _ListingMedia = base.CreateObjectSet<ListingMedia>("ListingMedia");
                }
                return _ListingMedia;
            }
        }
        private ObjectSet<ListingMedia> _ListingMedia;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingPaymentMode> ListingPaymentMode
        {
            get
            {
                if ((_ListingPaymentMode == null))
                {
                    _ListingPaymentMode = base.CreateObjectSet<ListingPaymentMode>("ListingPaymentMode");
                }
                return _ListingPaymentMode;
            }
        }
        private ObjectSet<ListingPaymentMode> _ListingPaymentMode;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingServiceLocation> ListingServiceLocation
        {
            get
            {
                if ((_ListingServiceLocation == null))
                {
                    _ListingServiceLocation = base.CreateObjectSet<ListingServiceLocation>("ListingServiceLocation");
                }
                return _ListingServiceLocation;
            }
        }
        private ObjectSet<ListingServiceLocation> _ListingServiceLocation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentMode> PaymentMode
        {
            get
            {
                if ((_PaymentMode == null))
                {
                    _PaymentMode = base.CreateObjectSet<PaymentMode>("PaymentMode");
                }
                return _PaymentMode;
            }
        }
        private ObjectSet<PaymentMode> _PaymentMode;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Products> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Products>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Products> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Requirement> Requirement
        {
            get
            {
                if ((_Requirement == null))
                {
                    _Requirement = base.CreateObjectSet<Requirement>("Requirement");
                }
                return _Requirement;
            }
        }
        private ObjectSet<Requirement> _Requirement;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequirementCategory> RequirementCategory
        {
            get
            {
                if ((_RequirementCategory == null))
                {
                    _RequirementCategory = base.CreateObjectSet<RequirementCategory>("RequirementCategory");
                }
                return _RequirementCategory;
            }
        }
        private ObjectSet<RequirementCategory> _RequirementCategory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequirementLocation> RequirementLocation
        {
            get
            {
                if ((_RequirementLocation == null))
                {
                    _RequirementLocation = base.CreateObjectSet<RequirementLocation>("RequirementLocation");
                }
                return _RequirementLocation;
            }
        }
        private ObjectSet<RequirementLocation> _RequirementLocation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> State
        {
            get
            {
                if ((_State == null))
                {
                    _State = base.CreateObjectSet<State>("State");
                }
                return _State;
            }
        }
        private ObjectSet<State> _State;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserType> UserType
        {
            get
            {
                if ((_UserType == null))
                {
                    _UserType = base.CreateObjectSet<UserType>("UserType");
                }
                return _UserType;
            }
        }
        private ObjectSet<UserType> _UserType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Blogs> Blogs
        {
            get
            {
                if ((_Blogs == null))
                {
                    _Blogs = base.CreateObjectSet<Blogs>("Blogs");
                }
                return _Blogs;
            }
        }
        private ObjectSet<Blogs> _Blogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trend> Trend
        {
            get
            {
                if ((_Trend == null))
                {
                    _Trend = base.CreateObjectSet<Trend>("Trend");
                }
                return _Trend;
            }
        }
        private ObjectSet<Trend> _Trend;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrendType> TrendType
        {
            get
            {
                if ((_TrendType == null))
                {
                    _TrendType = base.CreateObjectSet<TrendType>("TrendType");
                }
                return _TrendType;
            }
        }
        private ObjectSet<TrendType> _TrendType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUserClaims> AspNetUserClaims
        {
            get
            {
                if ((_AspNetUserClaims == null))
                {
                    _AspNetUserClaims = base.CreateObjectSet<AspNetUserClaims>("AspNetUserClaims");
                }
                return _AspNetUserClaims;
            }
        }
        private ObjectSet<AspNetUserClaims> _AspNetUserClaims;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUsers> AspNetUsers
        {
            get
            {
                if ((_AspNetUsers == null))
                {
                    _AspNetUsers = base.CreateObjectSet<AspNetUsers>("AspNetUsers");
                }
                return _AspNetUsers;
            }
        }
        private ObjectSet<AspNetUsers> _AspNetUsers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdditionalInfo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdditionalInfo(AdditionalInfo additionalInfo)
        {
            base.AddObject("AdditionalInfo", additionalInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Area EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArea(Area area)
        {
            base.AddObject("Area", area);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetRoles(AspNetRoles aspNetRoles)
        {
            base.AddObject("AspNetRoles", aspNetRoles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUserLogins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetUserLogins(AspNetUserLogins aspNetUserLogins)
        {
            base.AddObject("AspNetUserLogins", aspNetUserLogins);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategory(Category category)
        {
            base.AddObject("Category", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryRelation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryRelation(CategoryRelation categoryRelation)
        {
            base.AddObject("CategoryRelation", categoryRelation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the City EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCity(City city)
        {
            base.AddObject("City", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactType(ContactType contactType)
        {
            base.AddObject("ContactType", contactType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Country EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountry(Country country)
        {
            base.AddObject("Country", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the File EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFile(File file)
        {
            base.AddObject("File", file);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileExtension EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileExtension(FileExtension fileExtension)
        {
            base.AddObject("FileExtension", fileExtension);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileType(FileType fileType)
        {
            base.AddObject("FileType", fileType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Listing EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListing(Listing listing)
        {
            base.AddObject("Listing", listing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingCategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingCategory(ListingCategory listingCategory)
        {
            base.AddObject("ListingCategory", listingCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingContact EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingContact(ListingContact listingContact)
        {
            base.AddObject("ListingContact", listingContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingLocation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingLocation(ListingLocation listingLocation)
        {
            base.AddObject("ListingLocation", listingLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingMedia EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingMedia(ListingMedia listingMedia)
        {
            base.AddObject("ListingMedia", listingMedia);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingPaymentMode EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingPaymentMode(ListingPaymentMode listingPaymentMode)
        {
            base.AddObject("ListingPaymentMode", listingPaymentMode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingServiceLocation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingServiceLocation(ListingServiceLocation listingServiceLocation)
        {
            base.AddObject("ListingServiceLocation", listingServiceLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentMode EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentMode(PaymentMode paymentMode)
        {
            base.AddObject("PaymentMode", paymentMode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Products products)
        {
            base.AddObject("Products", products);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Requirement EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequirement(Requirement requirement)
        {
            base.AddObject("Requirement", requirement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequirementCategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequirementCategory(RequirementCategory requirementCategory)
        {
            base.AddObject("RequirementCategory", requirementCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequirementLocation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequirementLocation(RequirementLocation requirementLocation)
        {
            base.AddObject("RequirementLocation", requirementLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the State EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToState(State state)
        {
            base.AddObject("State", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserType(UserType userType)
        {
            base.AddObject("UserType", userType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Blogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlogs(Blogs blogs)
        {
            base.AddObject("Blogs", blogs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trend EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrend(Trend trend)
        {
            base.AddObject("Trend", trend);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrendType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrendType(TrendType trendType)
        {
            base.AddObject("TrendType", trendType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUserClaims EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetUserClaims(AspNetUserClaims aspNetUserClaims)
        {
            base.AddObject("AspNetUserClaims", aspNetUserClaims);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetUsers(AspNetUsers aspNetUsers)
        {
            base.AddObject("AspNetUsers", aspNetUsers);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="AdditionalInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdditionalInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdditionalInfo object.
        /// </summary>
        /// <param name="additionalInfoId">Initial value of the AdditionalInfoId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static AdditionalInfo CreateAdditionalInfo(global::System.Int16 additionalInfoId, global::System.String title)
        {
            AdditionalInfo additionalInfo = new AdditionalInfo();
            additionalInfo.AdditionalInfoId = additionalInfoId;
            additionalInfo.Title = title;
            return additionalInfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 AdditionalInfoId
        {
            get
            {
                return _AdditionalInfoId;
            }
            set
            {
                if (_AdditionalInfoId != value)
                {
                    OnAdditionalInfoIdChanging(value);
                    ReportPropertyChanging("AdditionalInfoId");
                    _AdditionalInfoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdditionalInfoId");
                    OnAdditionalInfoIdChanged();
                }
            }
        }
        private global::System.Int16 _AdditionalInfoId;
        partial void OnAdditionalInfoIdChanging(global::System.Int16 value);
        partial void OnAdditionalInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Requirement_AdditionalInfo", "Requirement")]
        public EntityCollection<Requirement> Requirement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Requirement>("TMC.Entities.EntityModels.FK_Requirement_AdditionalInfo", "Requirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Requirement>("TMC.Entities.EntityModels.FK_Requirement_AdditionalInfo", "Requirement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="Area")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Area : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Area object.
        /// </summary>
        /// <param name="areaId">Initial value of the AreaId property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="placeId">Initial value of the PlaceId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Area CreateArea(global::System.String areaId, global::System.Int32 cityId, global::System.String placeId, global::System.String name)
        {
            Area area = new Area();
            area.AreaId = areaId;
            area.CityId = cityId;
            area.PlaceId = placeId;
            area.Name = name;
            return area;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                if (_AreaId != value)
                {
                    OnAreaIdChanging(value);
                    ReportPropertyChanging("AreaId");
                    _AreaId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AreaId");
                    OnAreaIdChanged();
                }
            }
        }
        private global::System.String _AreaId;
        partial void OnAreaIdChanging(global::System.String value);
        partial void OnAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlaceId
        {
            get
            {
                return _PlaceId;
            }
            set
            {
                OnPlaceIdChanging(value);
                ReportPropertyChanging("PlaceId");
                _PlaceId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PlaceId");
                OnPlaceIdChanged();
            }
        }
        private global::System.String _PlaceId;
        partial void OnPlaceIdChanging(global::System.String value);
        partial void OnPlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Pin
        {
            get
            {
                return _Pin;
            }
            set
            {
                OnPinChanging(value);
                ReportPropertyChanging("Pin");
                _Pin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pin");
                OnPinChanged();
            }
        }
        private Nullable<global::System.Decimal> _Pin;
        partial void OnPinChanging(Nullable<global::System.Decimal> value);
        partial void OnPinChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Area_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_Area_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_Area_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_Area_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("TMC.Entities.EntityModels.FK_Area_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingLocation_Area", "ListingLocation")]
        public EntityCollection<ListingLocation> ListingLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingLocation>("TMC.Entities.EntityModels.FK_ListingLocation_Area", "ListingLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingLocation>("TMC.Entities.EntityModels.FK_ListingLocation_Area", "ListingLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_Area", "ListingServiceLocation")]
        public EntityCollection<ListingServiceLocation> ListingServiceLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingServiceLocation>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Area", "ListingServiceLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingServiceLocation>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Area", "ListingServiceLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_RequirementLocation_Area", "RequirementLocation")]
        public EntityCollection<RequirementLocation> RequirementLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequirementLocation>("TMC.Entities.EntityModels.FK_RequirementLocation_Area", "RequirementLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequirementLocation>("TMC.Entities.EntityModels.FK_RequirementLocation_Area", "RequirementLocation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="AspNetRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetRoles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetRoles object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AspNetRoles CreateAspNetRoles(global::System.String id, global::System.String name)
        {
            AspNetRoles aspNetRoles = new AspNetRoles();
            aspNetRoles.Id = id;
            aspNetRoles.Name = name;
            return aspNetRoles;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "AspNetUserRoles", "AspNetUsers")]
        public EntityCollection<AspNetUsers> AspNetUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUsers>("TMC.Entities.EntityModels.AspNetUserRoles", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUsers>("TMC.Entities.EntityModels.AspNetUserRoles", "AspNetUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="AspNetUserClaims")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUserClaims : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetUserClaims object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static AspNetUserClaims CreateAspNetUserClaims(global::System.Int32 id, global::System.String userId)
        {
            AspNetUserClaims aspNetUserClaims = new AspNetUserClaims();
            aspNetUserClaims.Id = id;
            aspNetUserClaims.UserId = userId;
            return aspNetUserClaims;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimType
        {
            get
            {
                return _ClaimType;
            }
            set
            {
                OnClaimTypeChanging(value);
                ReportPropertyChanging("ClaimType");
                _ClaimType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClaimType");
                OnClaimTypeChanged();
            }
        }
        private global::System.String _ClaimType;
        partial void OnClaimTypeChanging(global::System.String value);
        partial void OnClaimTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimValue
        {
            get
            {
                return _ClaimValue;
            }
            set
            {
                OnClaimValueChanging(value);
                ReportPropertyChanging("ClaimValue");
                _ClaimValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClaimValue");
                OnClaimValueChanged();
            }
        }
        private global::System.String _ClaimValue;
        partial void OnClaimValueChanging(global::System.String value);
        partial void OnClaimValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers")]
        public AspNetUsers AspNetUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUsers>("TMC.Entities.EntityModels.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUsers>("TMC.Entities.EntityModels.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUsers> AspNetUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUsers>("TMC.Entities.EntityModels.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUsers>("TMC.Entities.EntityModels.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="AspNetUserLogins")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUserLogins : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetUserLogins object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="loginProvider">Initial value of the LoginProvider property.</param>
        /// <param name="providerKey">Initial value of the ProviderKey property.</param>
        public static AspNetUserLogins CreateAspNetUserLogins(global::System.String userId, global::System.String loginProvider, global::System.String providerKey)
        {
            AspNetUserLogins aspNetUserLogins = new AspNetUserLogins();
            aspNetUserLogins.UserId = userId;
            aspNetUserLogins.LoginProvider = loginProvider;
            aspNetUserLogins.ProviderKey = providerKey;
            return aspNetUserLogins;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginProvider
        {
            get
            {
                return _LoginProvider;
            }
            set
            {
                if (_LoginProvider != value)
                {
                    OnLoginProviderChanging(value);
                    ReportPropertyChanging("LoginProvider");
                    _LoginProvider = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoginProvider");
                    OnLoginProviderChanged();
                }
            }
        }
        private global::System.String _LoginProvider;
        partial void OnLoginProviderChanging(global::System.String value);
        partial void OnLoginProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProviderKey
        {
            get
            {
                return _ProviderKey;
            }
            set
            {
                if (_ProviderKey != value)
                {
                    OnProviderKeyChanging(value);
                    ReportPropertyChanging("ProviderKey");
                    _ProviderKey = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProviderKey");
                    OnProviderKeyChanged();
                }
            }
        }
        private global::System.String _ProviderKey;
        partial void OnProviderKeyChanging(global::System.String value);
        partial void OnProviderKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers")]
        public AspNetUsers AspNetUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUsers>("TMC.Entities.EntityModels.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUsers>("TMC.Entities.EntityModels.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUsers> AspNetUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUsers>("TMC.Entities.EntityModels.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUsers>("TMC.Entities.EntityModels.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="AspNetUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetUsers object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="emailConfirmed">Initial value of the EmailConfirmed property.</param>
        /// <param name="phoneNumberConfirmed">Initial value of the PhoneNumberConfirmed property.</param>
        /// <param name="twoFactorEnabled">Initial value of the TwoFactorEnabled property.</param>
        /// <param name="lockoutEnabled">Initial value of the LockoutEnabled property.</param>
        /// <param name="accessFailedCount">Initial value of the AccessFailedCount property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static AspNetUsers CreateAspNetUsers(global::System.String id, global::System.Boolean emailConfirmed, global::System.Boolean phoneNumberConfirmed, global::System.Boolean twoFactorEnabled, global::System.Boolean lockoutEnabled, global::System.Int32 accessFailedCount, global::System.String userName)
        {
            AspNetUsers aspNetUsers = new AspNetUsers();
            aspNetUsers.Id = id;
            aspNetUsers.EmailConfirmed = emailConfirmed;
            aspNetUsers.PhoneNumberConfirmed = phoneNumberConfirmed;
            aspNetUsers.TwoFactorEnabled = twoFactorEnabled;
            aspNetUsers.LockoutEnabled = lockoutEnabled;
            aspNetUsers.AccessFailedCount = accessFailedCount;
            aspNetUsers.UserName = userName;
            return aspNetUsers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileNo
        {
            get
            {
                return _MobileNo;
            }
            set
            {
                OnMobileNoChanging(value);
                ReportPropertyChanging("MobileNo");
                _MobileNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileNo");
                OnMobileNoChanged();
            }
        }
        private global::System.String _MobileNo;
        partial void OnMobileNoChanging(global::System.String value);
        partial void OnMobileNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EmailConfirmed
        {
            get
            {
                return _EmailConfirmed;
            }
            set
            {
                OnEmailConfirmedChanging(value);
                ReportPropertyChanging("EmailConfirmed");
                _EmailConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmailConfirmed");
                OnEmailConfirmedChanged();
            }
        }
        private global::System.Boolean _EmailConfirmed;
        partial void OnEmailConfirmedChanging(global::System.Boolean value);
        partial void OnEmailConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityStamp
        {
            get
            {
                return _SecurityStamp;
            }
            set
            {
                OnSecurityStampChanging(value);
                ReportPropertyChanging("SecurityStamp");
                _SecurityStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityStamp");
                OnSecurityStampChanged();
            }
        }
        private global::System.String _SecurityStamp;
        partial void OnSecurityStampChanging(global::System.String value);
        partial void OnSecurityStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PhoneNumberConfirmed
        {
            get
            {
                return _PhoneNumberConfirmed;
            }
            set
            {
                OnPhoneNumberConfirmedChanging(value);
                ReportPropertyChanging("PhoneNumberConfirmed");
                _PhoneNumberConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneNumberConfirmed");
                OnPhoneNumberConfirmedChanged();
            }
        }
        private global::System.Boolean _PhoneNumberConfirmed;
        partial void OnPhoneNumberConfirmedChanging(global::System.Boolean value);
        partial void OnPhoneNumberConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TwoFactorEnabled
        {
            get
            {
                return _TwoFactorEnabled;
            }
            set
            {
                OnTwoFactorEnabledChanging(value);
                ReportPropertyChanging("TwoFactorEnabled");
                _TwoFactorEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TwoFactorEnabled");
                OnTwoFactorEnabledChanged();
            }
        }
        private global::System.Boolean _TwoFactorEnabled;
        partial void OnTwoFactorEnabledChanging(global::System.Boolean value);
        partial void OnTwoFactorEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LockoutEndDateUtc
        {
            get
            {
                return _LockoutEndDateUtc;
            }
            set
            {
                OnLockoutEndDateUtcChanging(value);
                ReportPropertyChanging("LockoutEndDateUtc");
                _LockoutEndDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockoutEndDateUtc");
                OnLockoutEndDateUtcChanged();
            }
        }
        private Nullable<global::System.DateTime> _LockoutEndDateUtc;
        partial void OnLockoutEndDateUtcChanging(Nullable<global::System.DateTime> value);
        partial void OnLockoutEndDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LockoutEnabled
        {
            get
            {
                return _LockoutEnabled;
            }
            set
            {
                OnLockoutEnabledChanging(value);
                ReportPropertyChanging("LockoutEnabled");
                _LockoutEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockoutEnabled");
                OnLockoutEnabledChanged();
            }
        }
        private global::System.Boolean _LockoutEnabled;
        partial void OnLockoutEnabledChanging(global::System.Boolean value);
        partial void OnLockoutEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessFailedCount
        {
            get
            {
                return _AccessFailedCount;
            }
            set
            {
                OnAccessFailedCountChanging(value);
                ReportPropertyChanging("AccessFailedCount");
                _AccessFailedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessFailedCount");
                OnAccessFailedCountChanged();
            }
        }
        private global::System.Int32 _AccessFailedCount;
        partial void OnAccessFailedCountChanging(global::System.Int32 value);
        partial void OnAccessFailedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUserClaims")]
        public EntityCollection<AspNetUserClaims> AspNetUserClaims
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUserClaims>("TMC.Entities.EntityModels.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUserClaims");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUserClaims>("TMC.Entities.EntityModels.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUserClaims", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUserLogins")]
        public EntityCollection<AspNetUserLogins> AspNetUserLogins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUserLogins>("TMC.Entities.EntityModels.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUserLogins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUserLogins>("TMC.Entities.EntityModels.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUserLogins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "AspNetUserRoles", "AspNetRoles")]
        public EntityCollection<AspNetRoles> AspNetRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetRoles>("TMC.Entities.EntityModels.AspNetUserRoles", "AspNetRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetRoles>("TMC.Entities.EntityModels.AspNetUserRoles", "AspNetRoles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="Blogs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Blogs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Blogs object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the modifiedDate property.</param>
        /// <param name="expiryDate">Initial value of the ExpiryDate property.</param>
        public static Blogs CreateBlogs(global::System.String id, global::System.DateTime createdDate, global::System.DateTime modifiedDate, global::System.DateTime expiryDate)
        {
            Blogs blogs = new Blogs();
            blogs.Id = id;
            blogs.CreatedDate = createdDate;
            blogs.modifiedDate = modifiedDate;
            blogs.ExpiryDate = expiryDate;
            return blogs;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.String _ProductId;
        partial void OnProductIdChanging(global::System.String value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebURL
        {
            get
            {
                return _WebURL;
            }
            set
            {
                OnWebURLChanging(value);
                ReportPropertyChanging("WebURL");
                _WebURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebURL");
                OnWebURLChanged();
            }
        }
        private global::System.String _WebURL;
        partial void OnWebURLChanging(global::System.String value);
        partial void OnWebURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Success
        {
            get
            {
                return _Success;
            }
            set
            {
                OnSuccessChanging(value);
                ReportPropertyChanging("Success");
                _Success = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Success");
                OnSuccessChanged();
            }
        }
        private Nullable<global::System.Int32> _Success;
        partial void OnSuccessChanging(Nullable<global::System.Int32> value);
        partial void OnSuccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Failure
        {
            get
            {
                return _Failure;
            }
            set
            {
                OnFailureChanging(value);
                ReportPropertyChanging("Failure");
                _Failure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Failure");
                OnFailureChanged();
            }
        }
        private Nullable<global::System.Int32> _Failure;
        partial void OnFailureChanging(Nullable<global::System.Int32> value);
        partial void OnFailureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                if (_CreatedDate != value)
                {
                    OnCreatedDateChanging(value);
                    ReportPropertyChanging("CreatedDate");
                    _CreatedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedDate");
                    OnCreatedDateChanged();
                }
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime modifiedDate
        {
            get
            {
                return _modifiedDate;
            }
            set
            {
                if (_modifiedDate != value)
                {
                    OnmodifiedDateChanging(value);
                    ReportPropertyChanging("modifiedDate");
                    _modifiedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("modifiedDate");
                    OnmodifiedDateChanged();
                }
            }
        }
        private global::System.DateTime _modifiedDate;
        partial void OnmodifiedDateChanging(global::System.DateTime value);
        partial void OnmodifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                if (_ExpiryDate != value)
                {
                    OnExpiryDateChanging(value);
                    ReportPropertyChanging("ExpiryDate");
                    _ExpiryDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExpiryDate");
                    OnExpiryDateChanged();
                }
            }
        }
        private global::System.DateTime _ExpiryDate;
        partial void OnExpiryDateChanging(global::System.DateTime value);
        partial void OnExpiryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId, global::System.String name)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            category.Name = name;
            return category;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Popularity
        {
            get
            {
                return _Popularity;
            }
            set
            {
                OnPopularityChanging(value);
                ReportPropertyChanging("Popularity");
                _Popularity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Popularity");
                OnPopularityChanged();
            }
        }
        private Nullable<global::System.Int32> _Popularity;
        partial void OnPopularityChanging(Nullable<global::System.Int32> value);
        partial void OnPopularityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_CategoryRelation_ChildCategory", "CategoryRelation")]
        public EntityCollection<CategoryRelation> CategoryRelation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryRelation>("TMC.Entities.EntityModels.FK_CategoryRelation_ChildCategory", "CategoryRelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryRelation>("TMC.Entities.EntityModels.FK_CategoryRelation_ChildCategory", "CategoryRelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_CategoryRelation_ParentCategory", "CategoryRelation")]
        public EntityCollection<CategoryRelation> CategoryRelation1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryRelation>("TMC.Entities.EntityModels.FK_CategoryRelation_ParentCategory", "CategoryRelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryRelation>("TMC.Entities.EntityModels.FK_CategoryRelation_ParentCategory", "CategoryRelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingCategory_Category", "ListingCategory")]
        public EntityCollection<ListingCategory> ListingCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingCategory>("TMC.Entities.EntityModels.FK_ListingCategory_Category", "ListingCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingCategory>("TMC.Entities.EntityModels.FK_ListingCategory_Category", "ListingCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_RequirementCategory_Category", "RequirementCategory")]
        public EntityCollection<RequirementCategory> RequirementCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequirementCategory>("TMC.Entities.EntityModels.FK_RequirementCategory_Category", "RequirementCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequirementCategory>("TMC.Entities.EntityModels.FK_RequirementCategory_Category", "RequirementCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="CategoryRelation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryRelation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryRelation object.
        /// </summary>
        /// <param name="categoryRelationId">Initial value of the CategoryRelationId property.</param>
        /// <param name="parentCategoryId">Initial value of the ParentCategoryId property.</param>
        /// <param name="childCategoryId">Initial value of the ChildCategoryId property.</param>
        public static CategoryRelation CreateCategoryRelation(global::System.Int32 categoryRelationId, global::System.Int32 parentCategoryId, global::System.Int32 childCategoryId)
        {
            CategoryRelation categoryRelation = new CategoryRelation();
            categoryRelation.CategoryRelationId = categoryRelationId;
            categoryRelation.ParentCategoryId = parentCategoryId;
            categoryRelation.ChildCategoryId = childCategoryId;
            return categoryRelation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryRelationId
        {
            get
            {
                return _CategoryRelationId;
            }
            set
            {
                if (_CategoryRelationId != value)
                {
                    OnCategoryRelationIdChanging(value);
                    ReportPropertyChanging("CategoryRelationId");
                    _CategoryRelationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryRelationId");
                    OnCategoryRelationIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryRelationId;
        partial void OnCategoryRelationIdChanging(global::System.Int32 value);
        partial void OnCategoryRelationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentCategoryId
        {
            get
            {
                return _ParentCategoryId;
            }
            set
            {
                OnParentCategoryIdChanging(value);
                ReportPropertyChanging("ParentCategoryId");
                _ParentCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentCategoryId");
                OnParentCategoryIdChanged();
            }
        }
        private global::System.Int32 _ParentCategoryId;
        partial void OnParentCategoryIdChanging(global::System.Int32 value);
        partial void OnParentCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChildCategoryId
        {
            get
            {
                return _ChildCategoryId;
            }
            set
            {
                OnChildCategoryIdChanging(value);
                ReportPropertyChanging("ChildCategoryId");
                _ChildCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildCategoryId");
                OnChildCategoryIdChanged();
            }
        }
        private global::System.Int32 _ChildCategoryId;
        partial void OnChildCategoryIdChanging(global::System.Int32 value);
        partial void OnChildCategoryIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_CategoryRelation_ChildCategory", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TMC.Entities.EntityModels.FK_CategoryRelation_ChildCategory", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TMC.Entities.EntityModels.FK_CategoryRelation_ChildCategory", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TMC.Entities.EntityModels.FK_CategoryRelation_ChildCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("TMC.Entities.EntityModels.FK_CategoryRelation_ChildCategory", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_CategoryRelation_ParentCategory", "Category")]
        public Category Category1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TMC.Entities.EntityModels.FK_CategoryRelation_ParentCategory", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TMC.Entities.EntityModels.FK_CategoryRelation_ParentCategory", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> Category1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TMC.Entities.EntityModels.FK_CategoryRelation_ParentCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("TMC.Entities.EntityModels.FK_CategoryRelation_ParentCategory", "Category", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="isPopular">Initial value of the IsPopular property.</param>
        public static City CreateCity(global::System.Int32 cityId, global::System.String name, global::System.Int32 stateId, global::System.Boolean isPopular)
        {
            City city = new City();
            city.CityId = cityId;
            city.Name = name;
            city.StateId = stateId;
            city.IsPopular = isPopular;
            return city;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                if (_CityId != value)
                {
                    OnCityIdChanging(value);
                    ReportPropertyChanging("CityId");
                    _CityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityId");
                    OnCityIdChanged();
                }
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private global::System.String _Lat;
        partial void OnLatChanging(global::System.String value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Long
        {
            get
            {
                return _Long;
            }
            set
            {
                OnLongChanging(value);
                ReportPropertyChanging("Long");
                _Long = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Long");
                OnLongChanged();
            }
        }
        private global::System.String _Long;
        partial void OnLongChanging(global::System.String value);
        partial void OnLongChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPopular
        {
            get
            {
                return _IsPopular;
            }
            set
            {
                OnIsPopularChanging(value);
                ReportPropertyChanging("IsPopular");
                _IsPopular = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPopular");
                OnIsPopularChanged();
            }
        }
        private global::System.Boolean _IsPopular;
        partial void OnIsPopularChanging(global::System.Boolean value);
        partial void OnIsPopularChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> PopulationClass
        {
            get
            {
                return _PopulationClass;
            }
            set
            {
                OnPopulationClassChanging(value);
                ReportPropertyChanging("PopulationClass");
                _PopulationClass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PopulationClass");
                OnPopulationClassChanged();
            }
        }
        private Nullable<global::System.Int16> _PopulationClass;
        partial void OnPopulationClassChanging(Nullable<global::System.Int16> value);
        partial void OnPopulationClassChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Area_City", "Area")]
        public EntityCollection<Area> Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Area>("TMC.Entities.EntityModels.FK_Area_City", "Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Area>("TMC.Entities.EntityModels.FK_Area_City", "Area", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_City_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TMC.Entities.EntityModels.FK_City_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TMC.Entities.EntityModels.FK_City_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TMC.Entities.EntityModels.FK_City_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TMC.Entities.EntityModels.FK_City_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Listing_City", "Listing")]
        public EntityCollection<Listing> Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Listing>("TMC.Entities.EntityModels.FK_Listing_City", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Listing>("TMC.Entities.EntityModels.FK_Listing_City", "Listing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingLocation_City", "ListingLocation")]
        public EntityCollection<ListingLocation> ListingLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingLocation>("TMC.Entities.EntityModels.FK_ListingLocation_City", "ListingLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingLocation>("TMC.Entities.EntityModels.FK_ListingLocation_City", "ListingLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_City", "ListingServiceLocation")]
        public EntityCollection<ListingServiceLocation> ListingServiceLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingServiceLocation>("TMC.Entities.EntityModels.FK_ListingServiceLocation_City", "ListingServiceLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingServiceLocation>("TMC.Entities.EntityModels.FK_ListingServiceLocation_City", "ListingServiceLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_RequirementLocation_City", "RequirementLocation")]
        public EntityCollection<RequirementLocation> RequirementLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequirementLocation>("TMC.Entities.EntityModels.FK_RequirementLocation_City", "RequirementLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequirementLocation>("TMC.Entities.EntityModels.FK_RequirementLocation_City", "RequirementLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Trend_City", "Trend")]
        public EntityCollection<Trend> Trend
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trend>("TMC.Entities.EntityModels.FK_Trend_City", "Trend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trend>("TMC.Entities.EntityModels.FK_Trend_City", "Trend", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="ContactType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactType object.
        /// </summary>
        /// <param name="contactTypeId">Initial value of the ContactTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ContactType CreateContactType(global::System.Int16 contactTypeId, global::System.String name)
        {
            ContactType contactType = new ContactType();
            contactType.ContactTypeId = contactTypeId;
            contactType.Name = name;
            return contactType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ContactTypeId
        {
            get
            {
                return _ContactTypeId;
            }
            set
            {
                if (_ContactTypeId != value)
                {
                    OnContactTypeIdChanging(value);
                    ReportPropertyChanging("ContactTypeId");
                    _ContactTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactTypeId");
                    OnContactTypeIdChanged();
                }
            }
        }
        private global::System.Int16 _ContactTypeId;
        partial void OnContactTypeIdChanging(global::System.Int16 value);
        partial void OnContactTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingContact_ContactType", "ListingContact")]
        public EntityCollection<ListingContact> ListingContact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingContact>("TMC.Entities.EntityModels.FK_ListingContact_ContactType", "ListingContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingContact>("TMC.Entities.EntityModels.FK_ListingContact_ContactType", "ListingContact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Country CreateCountry(global::System.Int16 countryId, global::System.String name)
        {
            Country country = new Country();
            country.CountryId = countryId;
            country.Name = name;
            return country;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                if (_CountryId != value)
                {
                    OnCountryIdChanging(value);
                    ReportPropertyChanging("CountryId");
                    _CountryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryId");
                    OnCountryIdChanged();
                }
            }
        }
        private global::System.Int16 _CountryId;
        partial void OnCountryIdChanging(global::System.Int16 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISD
        {
            get
            {
                return _ISD;
            }
            set
            {
                OnISDChanging(value);
                ReportPropertyChanging("ISD");
                _ISD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISD");
                OnISDChanged();
            }
        }
        private global::System.String _ISD;
        partial void OnISDChanging(global::System.String value);
        partial void OnISDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_Country", "ListingServiceLocation")]
        public EntityCollection<ListingServiceLocation> ListingServiceLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingServiceLocation>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Country", "ListingServiceLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingServiceLocation>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Country", "ListingServiceLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_State_Country", "State")]
        public EntityCollection<State> State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<State>("TMC.Entities.EntityModels.FK_State_Country", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<State>("TMC.Entities.EntityModels.FK_State_Country", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Trend_Country", "Trend")]
        public EntityCollection<Trend> Trend
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trend>("TMC.Entities.EntityModels.FK_Trend_Country", "Trend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trend>("TMC.Entities.EntityModels.FK_Trend_Country", "Trend", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="fileId">Initial value of the FileId property.</param>
        /// <param name="fileExtensionId">Initial value of the FileExtensionId property.</param>
        /// <param name="fileTypeId">Initial value of the FileTypeId property.</param>
        /// <param name="fileTitle">Initial value of the FileTitle property.</param>
        /// <param name="originalFileName">Initial value of the OriginalFileName property.</param>
        /// <param name="serverFileName">Initial value of the ServerFileName property.</param>
        /// <param name="serverPath">Initial value of the ServerPath property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static File CreateFile(global::System.Int64 fileId, global::System.Int16 fileExtensionId, global::System.Int16 fileTypeId, global::System.String fileTitle, global::System.String originalFileName, global::System.String serverFileName, global::System.String serverPath, global::System.DateTime createdOn, global::System.DateTime updatedOn, global::System.Int64 createdBy, global::System.Int64 updatedBy, global::System.Boolean isActive, global::System.Boolean isDeleted)
        {
            File file = new File();
            file.FileId = fileId;
            file.FileExtensionId = fileExtensionId;
            file.FileTypeId = fileTypeId;
            file.FileTitle = fileTitle;
            file.OriginalFileName = originalFileName;
            file.ServerFileName = serverFileName;
            file.ServerPath = serverPath;
            file.CreatedOn = createdOn;
            file.UpdatedOn = updatedOn;
            file.CreatedBy = createdBy;
            file.UpdatedBy = updatedBy;
            file.IsActive = isActive;
            file.IsDeleted = isDeleted;
            return file;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                if (_FileId != value)
                {
                    OnFileIdChanging(value);
                    ReportPropertyChanging("FileId");
                    _FileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileId");
                    OnFileIdChanged();
                }
            }
        }
        private global::System.Int64 _FileId;
        partial void OnFileIdChanging(global::System.Int64 value);
        partial void OnFileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 FileExtensionId
        {
            get
            {
                return _FileExtensionId;
            }
            set
            {
                OnFileExtensionIdChanging(value);
                ReportPropertyChanging("FileExtensionId");
                _FileExtensionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileExtensionId");
                OnFileExtensionIdChanged();
            }
        }
        private global::System.Int16 _FileExtensionId;
        partial void OnFileExtensionIdChanging(global::System.Int16 value);
        partial void OnFileExtensionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 FileTypeId
        {
            get
            {
                return _FileTypeId;
            }
            set
            {
                OnFileTypeIdChanging(value);
                ReportPropertyChanging("FileTypeId");
                _FileTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileTypeId");
                OnFileTypeIdChanged();
            }
        }
        private global::System.Int16 _FileTypeId;
        partial void OnFileTypeIdChanging(global::System.Int16 value);
        partial void OnFileTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileTitle
        {
            get
            {
                return _FileTitle;
            }
            set
            {
                OnFileTitleChanging(value);
                ReportPropertyChanging("FileTitle");
                _FileTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileTitle");
                OnFileTitleChanged();
            }
        }
        private global::System.String _FileTitle;
        partial void OnFileTitleChanging(global::System.String value);
        partial void OnFileTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OriginalFileName
        {
            get
            {
                return _OriginalFileName;
            }
            set
            {
                OnOriginalFileNameChanging(value);
                ReportPropertyChanging("OriginalFileName");
                _OriginalFileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OriginalFileName");
                OnOriginalFileNameChanged();
            }
        }
        private global::System.String _OriginalFileName;
        partial void OnOriginalFileNameChanging(global::System.String value);
        partial void OnOriginalFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerFileName
        {
            get
            {
                return _ServerFileName;
            }
            set
            {
                OnServerFileNameChanging(value);
                ReportPropertyChanging("ServerFileName");
                _ServerFileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServerFileName");
                OnServerFileNameChanged();
            }
        }
        private global::System.String _ServerFileName;
        partial void OnServerFileNameChanging(global::System.String value);
        partial void OnServerFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerPath
        {
            get
            {
                return _ServerPath;
            }
            set
            {
                OnServerPathChanging(value);
                ReportPropertyChanging("ServerPath");
                _ServerPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServerPath");
                OnServerPathChanged();
            }
        }
        private global::System.String _ServerPath;
        partial void OnServerPathChanging(global::System.String value);
        partial void OnServerPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int64 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int64 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int64 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int64 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_File_FileExtension", "FileExtension")]
        public FileExtension FileExtension
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileExtension>("TMC.Entities.EntityModels.FK_File_FileExtension", "FileExtension").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileExtension>("TMC.Entities.EntityModels.FK_File_FileExtension", "FileExtension").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileExtension> FileExtensionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileExtension>("TMC.Entities.EntityModels.FK_File_FileExtension", "FileExtension");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileExtension>("TMC.Entities.EntityModels.FK_File_FileExtension", "FileExtension", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_File_FileType", "FileType")]
        public FileType FileType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileType>("TMC.Entities.EntityModels.FK_File_FileType", "FileType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileType>("TMC.Entities.EntityModels.FK_File_FileType", "FileType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileType> FileTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileType>("TMC.Entities.EntityModels.FK_File_FileType", "FileType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileType>("TMC.Entities.EntityModels.FK_File_FileType", "FileType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingMedia_File", "ListingMedia")]
        public EntityCollection<ListingMedia> ListingMedia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingMedia>("TMC.Entities.EntityModels.FK_ListingMedia_File", "ListingMedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingMedia>("TMC.Entities.EntityModels.FK_ListingMedia_File", "ListingMedia", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="FileExtension")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileExtension : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileExtension object.
        /// </summary>
        /// <param name="fileExtensionId">Initial value of the FileExtensionId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="fileContentType">Initial value of the FileContentType property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static FileExtension CreateFileExtension(global::System.Int16 fileExtensionId, global::System.String name, global::System.String displayName, global::System.String fileContentType, global::System.Boolean isActive)
        {
            FileExtension fileExtension = new FileExtension();
            fileExtension.FileExtensionId = fileExtensionId;
            fileExtension.Name = name;
            fileExtension.DisplayName = displayName;
            fileExtension.FileContentType = fileContentType;
            fileExtension.IsActive = isActive;
            return fileExtension;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 FileExtensionId
        {
            get
            {
                return _FileExtensionId;
            }
            set
            {
                if (_FileExtensionId != value)
                {
                    OnFileExtensionIdChanging(value);
                    ReportPropertyChanging("FileExtensionId");
                    _FileExtensionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileExtensionId");
                    OnFileExtensionIdChanged();
                }
            }
        }
        private global::System.Int16 _FileExtensionId;
        partial void OnFileExtensionIdChanging(global::System.Int16 value);
        partial void OnFileExtensionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileContentType
        {
            get
            {
                return _FileContentType;
            }
            set
            {
                OnFileContentTypeChanging(value);
                ReportPropertyChanging("FileContentType");
                _FileContentType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileContentType");
                OnFileContentTypeChanged();
            }
        }
        private global::System.String _FileContentType;
        partial void OnFileContentTypeChanging(global::System.String value);
        partial void OnFileContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_File_FileExtension", "File")]
        public EntityCollection<File> File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("TMC.Entities.EntityModels.FK_File_FileExtension", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("TMC.Entities.EntityModels.FK_File_FileExtension", "File", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="FileType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileType object.
        /// </summary>
        /// <param name="fileTypeId">Initial value of the FileTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FileType CreateFileType(global::System.Int16 fileTypeId, global::System.String name)
        {
            FileType fileType = new FileType();
            fileType.FileTypeId = fileTypeId;
            fileType.Name = name;
            return fileType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 FileTypeId
        {
            get
            {
                return _FileTypeId;
            }
            set
            {
                if (_FileTypeId != value)
                {
                    OnFileTypeIdChanging(value);
                    ReportPropertyChanging("FileTypeId");
                    _FileTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileTypeId");
                    OnFileTypeIdChanged();
                }
            }
        }
        private global::System.Int16 _FileTypeId;
        partial void OnFileTypeIdChanging(global::System.Int16 value);
        partial void OnFileTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_File_FileType", "File")]
        public EntityCollection<File> File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("TMC.Entities.EntityModels.FK_File_FileType", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("TMC.Entities.EntityModels.FK_File_FileType", "File", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="Listing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Listing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Listing object.
        /// </summary>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="businessName">Initial value of the BusinessName property.</param>
        /// <param name="businessDays">Initial value of the BusinessDays property.</param>
        /// <param name="businessHours">Initial value of the BusinessHours property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="pinCode">Initial value of the PinCode property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Listing CreateListing(global::System.Int64 listingId, global::System.Int64 userId, global::System.String businessName, global::System.Int16 businessDays, global::System.Int16 businessHours, global::System.Int32 cityId, global::System.String address, global::System.Int32 pinCode, global::System.DateTime createdOn, global::System.DateTime updatedOn, global::System.Int64 createdBy, global::System.Int64 updatedBy, global::System.Boolean isActive, global::System.Boolean isDeleted)
        {
            Listing listing = new Listing();
            listing.ListingId = listingId;
            listing.UserId = userId;
            listing.BusinessName = businessName;
            listing.BusinessDays = businessDays;
            listing.BusinessHours = businessHours;
            listing.CityId = cityId;
            listing.Address = address;
            listing.PinCode = pinCode;
            listing.CreatedOn = createdOn;
            listing.UpdatedOn = updatedOn;
            listing.CreatedBy = createdBy;
            listing.UpdatedBy = updatedBy;
            listing.IsActive = isActive;
            listing.IsDeleted = isDeleted;
            return listing;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                if (_ListingId != value)
                {
                    OnListingIdChanging(value);
                    ReportPropertyChanging("ListingId");
                    _ListingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingId");
                    OnListingIdChanged();
                }
            }
        }
        private global::System.Int64 _ListingId;
        partial void OnListingIdChanging(global::System.Int64 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int64 _UserId;
        partial void OnUserIdChanging(global::System.Int64 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BusinessName
        {
            get
            {
                return _BusinessName;
            }
            set
            {
                OnBusinessNameChanging(value);
                ReportPropertyChanging("BusinessName");
                _BusinessName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BusinessName");
                OnBusinessNameChanged();
            }
        }
        private global::System.String _BusinessName;
        partial void OnBusinessNameChanging(global::System.String value);
        partial void OnBusinessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> YearStarted
        {
            get
            {
                return _YearStarted;
            }
            set
            {
                OnYearStartedChanging(value);
                ReportPropertyChanging("YearStarted");
                _YearStarted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearStarted");
                OnYearStartedChanged();
            }
        }
        private Nullable<global::System.Int16> _YearStarted;
        partial void OnYearStartedChanging(Nullable<global::System.Int16> value);
        partial void OnYearStartedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPerson
        {
            get
            {
                return _ContactPerson;
            }
            set
            {
                OnContactPersonChanging(value);
                ReportPropertyChanging("ContactPerson");
                _ContactPerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactPerson");
                OnContactPersonChanged();
            }
        }
        private global::System.String _ContactPerson;
        partial void OnContactPersonChanging(global::System.String value);
        partial void OnContactPersonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactEmailId
        {
            get
            {
                return _ContactEmailId;
            }
            set
            {
                OnContactEmailIdChanging(value);
                ReportPropertyChanging("ContactEmailId");
                _ContactEmailId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactEmailId");
                OnContactEmailIdChanged();
            }
        }
        private global::System.String _ContactEmailId;
        partial void OnContactEmailIdChanging(global::System.String value);
        partial void OnContactEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BusinessDays
        {
            get
            {
                return _BusinessDays;
            }
            set
            {
                OnBusinessDaysChanging(value);
                ReportPropertyChanging("BusinessDays");
                _BusinessDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessDays");
                OnBusinessDaysChanged();
            }
        }
        private global::System.Int16 _BusinessDays;
        partial void OnBusinessDaysChanging(global::System.Int16 value);
        partial void OnBusinessDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BusinessHours
        {
            get
            {
                return _BusinessHours;
            }
            set
            {
                OnBusinessHoursChanging(value);
                ReportPropertyChanging("BusinessHours");
                _BusinessHours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessHours");
                OnBusinessHoursChanged();
            }
        }
        private global::System.Int16 _BusinessHours;
        partial void OnBusinessHoursChanging(global::System.Int16 value);
        partial void OnBusinessHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessDescription
        {
            get
            {
                return _BusinessDescription;
            }
            set
            {
                OnBusinessDescriptionChanging(value);
                ReportPropertyChanging("BusinessDescription");
                _BusinessDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessDescription");
                OnBusinessDescriptionChanged();
            }
        }
        private global::System.String _BusinessDescription;
        partial void OnBusinessDescriptionChanging(global::System.String value);
        partial void OnBusinessDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Landmark
        {
            get
            {
                return _Landmark;
            }
            set
            {
                OnLandmarkChanging(value);
                ReportPropertyChanging("Landmark");
                _Landmark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Landmark");
                OnLandmarkChanged();
            }
        }
        private global::System.String _Landmark;
        partial void OnLandmarkChanging(global::System.String value);
        partial void OnLandmarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PinCode
        {
            get
            {
                return _PinCode;
            }
            set
            {
                OnPinCodeChanging(value);
                ReportPropertyChanging("PinCode");
                _PinCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PinCode");
                OnPinCodeChanged();
            }
        }
        private global::System.Int32 _PinCode;
        partial void OnPinCodeChanging(global::System.Int32 value);
        partial void OnPinCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int64 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int64 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int64 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int64 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Listing_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_Listing_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_Listing_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_Listing_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("TMC.Entities.EntityModels.FK_Listing_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Listing_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TMC.Entities.EntityModels.FK_Listing_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TMC.Entities.EntityModels.FK_Listing_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TMC.Entities.EntityModels.FK_Listing_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TMC.Entities.EntityModels.FK_Listing_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingCategory_Listing", "ListingCategory")]
        public EntityCollection<ListingCategory> ListingCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingCategory>("TMC.Entities.EntityModels.FK_ListingCategory_Listing", "ListingCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingCategory>("TMC.Entities.EntityModels.FK_ListingCategory_Listing", "ListingCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingContact_Listing", "ListingContact")]
        public EntityCollection<ListingContact> ListingContact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingContact>("TMC.Entities.EntityModels.FK_ListingContact_Listing", "ListingContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingContact>("TMC.Entities.EntityModels.FK_ListingContact_Listing", "ListingContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingLocation_Listing", "ListingLocation")]
        public EntityCollection<ListingLocation> ListingLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingLocation>("TMC.Entities.EntityModels.FK_ListingLocation_Listing", "ListingLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingLocation>("TMC.Entities.EntityModels.FK_ListingLocation_Listing", "ListingLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingMedia_Listing", "ListingMedia")]
        public EntityCollection<ListingMedia> ListingMedia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingMedia>("TMC.Entities.EntityModels.FK_ListingMedia_Listing", "ListingMedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingMedia>("TMC.Entities.EntityModels.FK_ListingMedia_Listing", "ListingMedia", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingPaymentMode_Listing", "ListingPaymentMode")]
        public EntityCollection<ListingPaymentMode> ListingPaymentMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingPaymentMode>("TMC.Entities.EntityModels.FK_ListingPaymentMode_Listing", "ListingPaymentMode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingPaymentMode>("TMC.Entities.EntityModels.FK_ListingPaymentMode_Listing", "ListingPaymentMode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_Listing", "ListingServiceLocation")]
        public EntityCollection<ListingServiceLocation> ListingServiceLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingServiceLocation>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Listing", "ListingServiceLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingServiceLocation>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Listing", "ListingServiceLocation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="ListingCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingCategory object.
        /// </summary>
        /// <param name="listingCategoryId">Initial value of the ListingCategoryId property.</param>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        public static ListingCategory CreateListingCategory(global::System.Int64 listingCategoryId, global::System.Int64 listingId, global::System.Int32 categoryId)
        {
            ListingCategory listingCategory = new ListingCategory();
            listingCategory.ListingCategoryId = listingCategoryId;
            listingCategory.ListingId = listingId;
            listingCategory.CategoryId = categoryId;
            return listingCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingCategoryId
        {
            get
            {
                return _ListingCategoryId;
            }
            set
            {
                if (_ListingCategoryId != value)
                {
                    OnListingCategoryIdChanging(value);
                    ReportPropertyChanging("ListingCategoryId");
                    _ListingCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingCategoryId");
                    OnListingCategoryIdChanged();
                }
            }
        }
        private global::System.Int64 _ListingCategoryId;
        partial void OnListingCategoryIdChanging(global::System.Int64 value);
        partial void OnListingCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                OnListingIdChanging(value);
                ReportPropertyChanging("ListingId");
                _ListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingId");
                OnListingIdChanged();
            }
        }
        private global::System.Int64 _ListingId;
        partial void OnListingIdChanging(global::System.Int64 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingCategory_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TMC.Entities.EntityModels.FK_ListingCategory_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TMC.Entities.EntityModels.FK_ListingCategory_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TMC.Entities.EntityModels.FK_ListingCategory_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("TMC.Entities.EntityModels.FK_ListingCategory_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingCategory_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingCategory_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingCategory_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingCategory_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingCategory_Listing", "Listing", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="ListingContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingContact object.
        /// </summary>
        /// <param name="listingContactId">Initial value of the ListingContactId property.</param>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="contactNo">Initial value of the ContactNo property.</param>
        /// <param name="contactTypeId">Initial value of the ContactTypeId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static ListingContact CreateListingContact(global::System.Int64 listingContactId, global::System.Int64 listingId, global::System.Decimal contactNo, global::System.Int16 contactTypeId, global::System.DateTime createdOn, global::System.DateTime updatedOn, global::System.Int64 createdBy, global::System.Int64 updatedBy, global::System.Boolean isActive, global::System.Boolean isDeleted)
        {
            ListingContact listingContact = new ListingContact();
            listingContact.ListingContactId = listingContactId;
            listingContact.ListingId = listingId;
            listingContact.ContactNo = contactNo;
            listingContact.ContactTypeId = contactTypeId;
            listingContact.CreatedOn = createdOn;
            listingContact.UpdatedOn = updatedOn;
            listingContact.CreatedBy = createdBy;
            listingContact.UpdatedBy = updatedBy;
            listingContact.IsActive = isActive;
            listingContact.IsDeleted = isDeleted;
            return listingContact;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingContactId
        {
            get
            {
                return _ListingContactId;
            }
            set
            {
                if (_ListingContactId != value)
                {
                    OnListingContactIdChanging(value);
                    ReportPropertyChanging("ListingContactId");
                    _ListingContactId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingContactId");
                    OnListingContactIdChanged();
                }
            }
        }
        private global::System.Int64 _ListingContactId;
        partial void OnListingContactIdChanging(global::System.Int64 value);
        partial void OnListingContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                OnListingIdChanging(value);
                ReportPropertyChanging("ListingId");
                _ListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingId");
                OnListingIdChanged();
            }
        }
        private global::System.Int64 _ListingId;
        partial void OnListingIdChanging(global::System.Int64 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ContactNo
        {
            get
            {
                return _ContactNo;
            }
            set
            {
                OnContactNoChanging(value);
                ReportPropertyChanging("ContactNo");
                _ContactNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactNo");
                OnContactNoChanged();
            }
        }
        private global::System.Decimal _ContactNo;
        partial void OnContactNoChanging(global::System.Decimal value);
        partial void OnContactNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ContactTypeId
        {
            get
            {
                return _ContactTypeId;
            }
            set
            {
                OnContactTypeIdChanging(value);
                ReportPropertyChanging("ContactTypeId");
                _ContactTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactTypeId");
                OnContactTypeIdChanged();
            }
        }
        private global::System.Int16 _ContactTypeId;
        partial void OnContactTypeIdChanging(global::System.Int16 value);
        partial void OnContactTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int64 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int64 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int64 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int64 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingContact_ContactType", "ContactType")]
        public ContactType ContactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("TMC.Entities.EntityModels.FK_ListingContact_ContactType", "ContactType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("TMC.Entities.EntityModels.FK_ListingContact_ContactType", "ContactType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactType> ContactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactType>("TMC.Entities.EntityModels.FK_ListingContact_ContactType", "ContactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactType>("TMC.Entities.EntityModels.FK_ListingContact_ContactType", "ContactType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingContact_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingContact_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingContact_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingContact_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingContact_Listing", "Listing", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="ListingLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingLocation object.
        /// </summary>
        /// <param name="listingLocationId">Initial value of the ListingLocationId property.</param>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="areaId">Initial value of the AreaId property.</param>
        /// <param name="pinCode">Initial value of the PinCode property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static ListingLocation CreateListingLocation(global::System.Int64 listingLocationId, global::System.Int64 listingId, global::System.Int32 cityId, global::System.String areaId, global::System.Int32 pinCode, global::System.DateTime createdOn, global::System.DateTime updatedOn, global::System.Int64 createdBy, global::System.Int64 updatedBy, global::System.Boolean isActive, global::System.Boolean isDeleted)
        {
            ListingLocation listingLocation = new ListingLocation();
            listingLocation.ListingLocationId = listingLocationId;
            listingLocation.ListingId = listingId;
            listingLocation.CityId = cityId;
            listingLocation.AreaId = areaId;
            listingLocation.PinCode = pinCode;
            listingLocation.CreatedOn = createdOn;
            listingLocation.UpdatedOn = updatedOn;
            listingLocation.CreatedBy = createdBy;
            listingLocation.UpdatedBy = updatedBy;
            listingLocation.IsActive = isActive;
            listingLocation.IsDeleted = isDeleted;
            return listingLocation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingLocationId
        {
            get
            {
                return _ListingLocationId;
            }
            set
            {
                if (_ListingLocationId != value)
                {
                    OnListingLocationIdChanging(value);
                    ReportPropertyChanging("ListingLocationId");
                    _ListingLocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingLocationId");
                    OnListingLocationIdChanged();
                }
            }
        }
        private global::System.Int64 _ListingLocationId;
        partial void OnListingLocationIdChanging(global::System.Int64 value);
        partial void OnListingLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                OnListingIdChanging(value);
                ReportPropertyChanging("ListingId");
                _ListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingId");
                OnListingIdChanged();
            }
        }
        private global::System.Int64 _ListingId;
        partial void OnListingIdChanging(global::System.Int64 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                OnAreaIdChanging(value);
                ReportPropertyChanging("AreaId");
                _AreaId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AreaId");
                OnAreaIdChanged();
            }
        }
        private global::System.String _AreaId;
        partial void OnAreaIdChanging(global::System.String value);
        partial void OnAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Landmark
        {
            get
            {
                return _Landmark;
            }
            set
            {
                OnLandmarkChanging(value);
                ReportPropertyChanging("Landmark");
                _Landmark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Landmark");
                OnLandmarkChanged();
            }
        }
        private global::System.String _Landmark;
        partial void OnLandmarkChanging(global::System.String value);
        partial void OnLandmarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PinCode
        {
            get
            {
                return _PinCode;
            }
            set
            {
                OnPinCodeChanging(value);
                ReportPropertyChanging("PinCode");
                _PinCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PinCode");
                OnPinCodeChanged();
            }
        }
        private global::System.Int32 _PinCode;
        partial void OnPinCodeChanging(global::System.Int32 value);
        partial void OnPinCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int64 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int64 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int64 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int64 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingLocation_Area", "Area")]
        public Area Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("TMC.Entities.EntityModels.FK_ListingLocation_Area", "Area").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("TMC.Entities.EntityModels.FK_ListingLocation_Area", "Area").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Area> AreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("TMC.Entities.EntityModels.FK_ListingLocation_Area", "Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Area>("TMC.Entities.EntityModels.FK_ListingLocation_Area", "Area", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingLocation_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_ListingLocation_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_ListingLocation_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_ListingLocation_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("TMC.Entities.EntityModels.FK_ListingLocation_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingLocation_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingLocation_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingLocation_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingLocation_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingLocation_Listing", "Listing", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="ListingMedia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingMedia : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingMedia object.
        /// </summary>
        /// <param name="listingMediaId">Initial value of the ListingMediaId property.</param>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="fileId">Initial value of the FileId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static ListingMedia CreateListingMedia(global::System.Int64 listingMediaId, global::System.Int64 listingId, global::System.Int64 fileId, global::System.DateTime createdOn, global::System.DateTime updatedOn, global::System.Int64 createdBy, global::System.Int64 updatedBy, global::System.Boolean isActive, global::System.Boolean isDeleted)
        {
            ListingMedia listingMedia = new ListingMedia();
            listingMedia.ListingMediaId = listingMediaId;
            listingMedia.ListingId = listingId;
            listingMedia.FileId = fileId;
            listingMedia.CreatedOn = createdOn;
            listingMedia.UpdatedOn = updatedOn;
            listingMedia.CreatedBy = createdBy;
            listingMedia.UpdatedBy = updatedBy;
            listingMedia.IsActive = isActive;
            listingMedia.IsDeleted = isDeleted;
            return listingMedia;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingMediaId
        {
            get
            {
                return _ListingMediaId;
            }
            set
            {
                if (_ListingMediaId != value)
                {
                    OnListingMediaIdChanging(value);
                    ReportPropertyChanging("ListingMediaId");
                    _ListingMediaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingMediaId");
                    OnListingMediaIdChanged();
                }
            }
        }
        private global::System.Int64 _ListingMediaId;
        partial void OnListingMediaIdChanging(global::System.Int64 value);
        partial void OnListingMediaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                OnListingIdChanging(value);
                ReportPropertyChanging("ListingId");
                _ListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingId");
                OnListingIdChanged();
            }
        }
        private global::System.Int64 _ListingId;
        partial void OnListingIdChanging(global::System.Int64 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                OnFileIdChanging(value);
                ReportPropertyChanging("FileId");
                _FileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileId");
                OnFileIdChanged();
            }
        }
        private global::System.Int64 _FileId;
        partial void OnFileIdChanging(global::System.Int64 value);
        partial void OnFileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int64 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int64 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int64 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int64 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingMedia_File", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("TMC.Entities.EntityModels.FK_ListingMedia_File", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("TMC.Entities.EntityModels.FK_ListingMedia_File", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("TMC.Entities.EntityModels.FK_ListingMedia_File", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("TMC.Entities.EntityModels.FK_ListingMedia_File", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingMedia_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingMedia_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingMedia_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingMedia_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingMedia_Listing", "Listing", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="ListingPaymentMode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingPaymentMode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingPaymentMode object.
        /// </summary>
        /// <param name="listingPaymentModeId">Initial value of the ListingPaymentModeId property.</param>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="paymentModeId">Initial value of the PaymentModeId property.</param>
        public static ListingPaymentMode CreateListingPaymentMode(global::System.Int64 listingPaymentModeId, global::System.Int64 listingId, global::System.Int16 paymentModeId)
        {
            ListingPaymentMode listingPaymentMode = new ListingPaymentMode();
            listingPaymentMode.ListingPaymentModeId = listingPaymentModeId;
            listingPaymentMode.ListingId = listingId;
            listingPaymentMode.PaymentModeId = paymentModeId;
            return listingPaymentMode;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingPaymentModeId
        {
            get
            {
                return _ListingPaymentModeId;
            }
            set
            {
                if (_ListingPaymentModeId != value)
                {
                    OnListingPaymentModeIdChanging(value);
                    ReportPropertyChanging("ListingPaymentModeId");
                    _ListingPaymentModeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingPaymentModeId");
                    OnListingPaymentModeIdChanged();
                }
            }
        }
        private global::System.Int64 _ListingPaymentModeId;
        partial void OnListingPaymentModeIdChanging(global::System.Int64 value);
        partial void OnListingPaymentModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                OnListingIdChanging(value);
                ReportPropertyChanging("ListingId");
                _ListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingId");
                OnListingIdChanged();
            }
        }
        private global::System.Int64 _ListingId;
        partial void OnListingIdChanging(global::System.Int64 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 PaymentModeId
        {
            get
            {
                return _PaymentModeId;
            }
            set
            {
                OnPaymentModeIdChanging(value);
                ReportPropertyChanging("PaymentModeId");
                _PaymentModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentModeId");
                OnPaymentModeIdChanged();
            }
        }
        private global::System.Int16 _PaymentModeId;
        partial void OnPaymentModeIdChanging(global::System.Int16 value);
        partial void OnPaymentModeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingPaymentMode_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingPaymentMode_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingPaymentMode_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingPaymentMode_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingPaymentMode_Listing", "Listing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingPaymentMode_PaymentMode", "PaymentMode")]
        public PaymentMode PaymentMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMode>("TMC.Entities.EntityModels.FK_ListingPaymentMode_PaymentMode", "PaymentMode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMode>("TMC.Entities.EntityModels.FK_ListingPaymentMode_PaymentMode", "PaymentMode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentMode> PaymentModeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMode>("TMC.Entities.EntityModels.FK_ListingPaymentMode_PaymentMode", "PaymentMode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentMode>("TMC.Entities.EntityModels.FK_ListingPaymentMode_PaymentMode", "PaymentMode", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="ListingServiceLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingServiceLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingServiceLocation object.
        /// </summary>
        /// <param name="listingServiceLocationId">Initial value of the ListingServiceLocationId property.</param>
        /// <param name="listingId">Initial value of the ListingId property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static ListingServiceLocation CreateListingServiceLocation(global::System.Int64 listingServiceLocationId, global::System.Int64 listingId, global::System.Int32 cityId, global::System.Int32 stateId, global::System.Int16 countryId, global::System.DateTime createdOn, global::System.DateTime updatedOn, global::System.Int64 createdBy, global::System.Int64 updatedBy, global::System.Boolean isActive, global::System.Boolean isDeleted)
        {
            ListingServiceLocation listingServiceLocation = new ListingServiceLocation();
            listingServiceLocation.ListingServiceLocationId = listingServiceLocationId;
            listingServiceLocation.ListingId = listingId;
            listingServiceLocation.CityId = cityId;
            listingServiceLocation.StateId = stateId;
            listingServiceLocation.CountryId = countryId;
            listingServiceLocation.CreatedOn = createdOn;
            listingServiceLocation.UpdatedOn = updatedOn;
            listingServiceLocation.CreatedBy = createdBy;
            listingServiceLocation.UpdatedBy = updatedBy;
            listingServiceLocation.IsActive = isActive;
            listingServiceLocation.IsDeleted = isDeleted;
            return listingServiceLocation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingServiceLocationId
        {
            get
            {
                return _ListingServiceLocationId;
            }
            set
            {
                if (_ListingServiceLocationId != value)
                {
                    OnListingServiceLocationIdChanging(value);
                    ReportPropertyChanging("ListingServiceLocationId");
                    _ListingServiceLocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingServiceLocationId");
                    OnListingServiceLocationIdChanged();
                }
            }
        }
        private global::System.Int64 _ListingServiceLocationId;
        partial void OnListingServiceLocationIdChanging(global::System.Int64 value);
        partial void OnListingServiceLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListingId
        {
            get
            {
                return _ListingId;
            }
            set
            {
                OnListingIdChanging(value);
                ReportPropertyChanging("ListingId");
                _ListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingId");
                OnListingIdChanged();
            }
        }
        private global::System.Int64 _ListingId;
        partial void OnListingIdChanging(global::System.Int64 value);
        partial void OnListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsGlobalLevel
        {
            get
            {
                return _IsGlobalLevel;
            }
            set
            {
                OnIsGlobalLevelChanging(value);
                ReportPropertyChanging("IsGlobalLevel");
                _IsGlobalLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGlobalLevel");
                OnIsGlobalLevelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsGlobalLevel;
        partial void OnIsGlobalLevelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsGlobalLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCountryLevel
        {
            get
            {
                return _IsCountryLevel;
            }
            set
            {
                OnIsCountryLevelChanging(value);
                ReportPropertyChanging("IsCountryLevel");
                _IsCountryLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCountryLevel");
                OnIsCountryLevelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCountryLevel;
        partial void OnIsCountryLevelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCountryLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsStateLevel
        {
            get
            {
                return _IsStateLevel;
            }
            set
            {
                OnIsStateLevelChanging(value);
                ReportPropertyChanging("IsStateLevel");
                _IsStateLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsStateLevel");
                OnIsStateLevelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsStateLevel;
        partial void OnIsStateLevelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsStateLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCityLevel
        {
            get
            {
                return _IsCityLevel;
            }
            set
            {
                OnIsCityLevelChanging(value);
                ReportPropertyChanging("IsCityLevel");
                _IsCityLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCityLevel");
                OnIsCityLevelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCityLevel;
        partial void OnIsCityLevelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCityLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int16 _CountryId;
        partial void OnCountryIdChanging(global::System.Int16 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                OnAreaIdChanging(value);
                ReportPropertyChanging("AreaId");
                _AreaId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaId");
                OnAreaIdChanged();
            }
        }
        private global::System.String _AreaId;
        partial void OnAreaIdChanging(global::System.String value);
        partial void OnAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int64 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int64 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int64 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int64 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_Area", "Area")]
        public Area Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Area", "Area").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Area", "Area").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Area> AreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Area", "Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Area>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Area", "Area", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_ListingServiceLocation_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_ListingServiceLocation_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_ListingServiceLocation_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("TMC.Entities.EntityModels.FK_ListingServiceLocation_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_Listing", "Listing")]
        public Listing Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Listing", "Listing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Listing", "Listing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Listing> ListingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Listing", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Listing>("TMC.Entities.EntityModels.FK_ListingServiceLocation_Listing", "Listing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TMC.Entities.EntityModels.FK_ListingServiceLocation_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TMC.Entities.EntityModels.FK_ListingServiceLocation_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TMC.Entities.EntityModels.FK_ListingServiceLocation_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TMC.Entities.EntityModels.FK_ListingServiceLocation_State", "State", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="PaymentMode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentMode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentMode object.
        /// </summary>
        /// <param name="paymentModeId">Initial value of the PaymentModeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PaymentMode CreatePaymentMode(global::System.Int16 paymentModeId, global::System.String name)
        {
            PaymentMode paymentMode = new PaymentMode();
            paymentMode.PaymentModeId = paymentModeId;
            paymentMode.Name = name;
            return paymentMode;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 PaymentModeId
        {
            get
            {
                return _PaymentModeId;
            }
            set
            {
                if (_PaymentModeId != value)
                {
                    OnPaymentModeIdChanging(value);
                    ReportPropertyChanging("PaymentModeId");
                    _PaymentModeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentModeId");
                    OnPaymentModeIdChanged();
                }
            }
        }
        private global::System.Int16 _PaymentModeId;
        partial void OnPaymentModeIdChanging(global::System.Int16 value);
        partial void OnPaymentModeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingPaymentMode_PaymentMode", "ListingPaymentMode")]
        public EntityCollection<ListingPaymentMode> ListingPaymentMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingPaymentMode>("TMC.Entities.EntityModels.FK_ListingPaymentMode_PaymentMode", "ListingPaymentMode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingPaymentMode>("TMC.Entities.EntityModels.FK_ListingPaymentMode_PaymentMode", "ListingPaymentMode", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="Products")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Products : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Products object.
        /// </summary>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="seoTitle">Initial value of the SeoTitle property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="expiryDate">Initial value of the ExpiryDate property.</param>
        public static Products CreateProducts(global::System.Int32 productId, global::System.String seoTitle, global::System.DateTime createdDate, global::System.DateTime modifiedDate, global::System.DateTime expiryDate)
        {
            Products products = new Products();
            products.ProductId = productId;
            products.SeoTitle = seoTitle;
            products.CreatedDate = createdDate;
            products.ModifiedDate = modifiedDate;
            products.ExpiryDate = expiryDate;
            return products;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeoTitle
        {
            get
            {
                return _SeoTitle;
            }
            set
            {
                if (_SeoTitle != value)
                {
                    OnSeoTitleChanging(value);
                    ReportPropertyChanging("SeoTitle");
                    _SeoTitle = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SeoTitle");
                    OnSeoTitleChanged();
                }
            }
        }
        private global::System.String _SeoTitle;
        partial void OnSeoTitleChanging(global::System.String value);
        partial void OnSeoTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageURL
        {
            get
            {
                return _ImageURL;
            }
            set
            {
                OnImageURLChanging(value);
                ReportPropertyChanging("ImageURL");
                _ImageURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageURL");
                OnImageURLChanged();
            }
        }
        private global::System.String _ImageURL;
        partial void OnImageURLChanging(global::System.String value);
        partial void OnImageURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteURL
        {
            get
            {
                return _SiteURL;
            }
            set
            {
                OnSiteURLChanging(value);
                ReportPropertyChanging("SiteURL");
                _SiteURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteURL");
                OnSiteURLChanged();
            }
        }
        private global::System.String _SiteURL;
        partial void OnSiteURLChanging(global::System.String value);
        partial void OnSiteURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentText
        {
            get
            {
                return _ContentText;
            }
            set
            {
                OnContentTextChanging(value);
                ReportPropertyChanging("ContentText");
                _ContentText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentText");
                OnContentTextChanged();
            }
        }
        private global::System.String _ContentText;
        partial void OnContentTextChanging(global::System.String value);
        partial void OnContentTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                OnExpiryDateChanging(value);
                ReportPropertyChanging("ExpiryDate");
                _ExpiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiryDate");
                OnExpiryDateChanged();
            }
        }
        private global::System.DateTime _ExpiryDate;
        partial void OnExpiryDateChanging(global::System.DateTime value);
        partial void OnExpiryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="Requirement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Requirement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Requirement object.
        /// </summary>
        /// <param name="requirementId">Initial value of the RequirementId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Requirement CreateRequirement(global::System.Int64 requirementId, global::System.Int64 userId, global::System.String title, global::System.String description, global::System.DateTime createdOn, global::System.DateTime updatedOn, global::System.Int64 createdBy, global::System.Int64 updatedBy, global::System.Boolean isActive, global::System.Boolean isDeleted)
        {
            Requirement requirement = new Requirement();
            requirement.RequirementId = requirementId;
            requirement.UserId = userId;
            requirement.Title = title;
            requirement.Description = description;
            requirement.CreatedOn = createdOn;
            requirement.UpdatedOn = updatedOn;
            requirement.CreatedBy = createdBy;
            requirement.UpdatedBy = updatedBy;
            requirement.IsActive = isActive;
            requirement.IsDeleted = isDeleted;
            return requirement;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RequirementId
        {
            get
            {
                return _RequirementId;
            }
            set
            {
                if (_RequirementId != value)
                {
                    OnRequirementIdChanging(value);
                    ReportPropertyChanging("RequirementId");
                    _RequirementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RequirementId");
                    OnRequirementIdChanged();
                }
            }
        }
        private global::System.Int64 _RequirementId;
        partial void OnRequirementIdChanging(global::System.Int64 value);
        partial void OnRequirementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int64 _UserId;
        partial void OnUserIdChanging(global::System.Int64 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LikeCount
        {
            get
            {
                return _LikeCount;
            }
            set
            {
                OnLikeCountChanging(value);
                ReportPropertyChanging("LikeCount");
                _LikeCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LikeCount");
                OnLikeCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LikeCount;
        partial void OnLikeCountChanging(Nullable<global::System.Int32> value);
        partial void OnLikeCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DislikeCount
        {
            get
            {
                return _DislikeCount;
            }
            set
            {
                OnDislikeCountChanging(value);
                ReportPropertyChanging("DislikeCount");
                _DislikeCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DislikeCount");
                OnDislikeCountChanged();
            }
        }
        private Nullable<global::System.Int32> _DislikeCount;
        partial void OnDislikeCountChanging(Nullable<global::System.Int32> value);
        partial void OnDislikeCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AbuseCount
        {
            get
            {
                return _AbuseCount;
            }
            set
            {
                OnAbuseCountChanging(value);
                ReportPropertyChanging("AbuseCount");
                _AbuseCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AbuseCount");
                OnAbuseCountChanged();
            }
        }
        private Nullable<global::System.Int32> _AbuseCount;
        partial void OnAbuseCountChanging(Nullable<global::System.Int32> value);
        partial void OnAbuseCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> LevelId
        {
            get
            {
                return _LevelId;
            }
            set
            {
                OnLevelIdChanging(value);
                ReportPropertyChanging("LevelId");
                _LevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelId");
                OnLevelIdChanged();
            }
        }
        private Nullable<global::System.Int16> _LevelId;
        partial void OnLevelIdChanging(Nullable<global::System.Int16> value);
        partial void OnLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> AdditionalInfoId
        {
            get
            {
                return _AdditionalInfoId;
            }
            set
            {
                OnAdditionalInfoIdChanging(value);
                ReportPropertyChanging("AdditionalInfoId");
                _AdditionalInfoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdditionalInfoId");
                OnAdditionalInfoIdChanged();
            }
        }
        private Nullable<global::System.Int16> _AdditionalInfoId;
        partial void OnAdditionalInfoIdChanging(Nullable<global::System.Int16> value);
        partial void OnAdditionalInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int64 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int64 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int64 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int64 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Requirement_AdditionalInfo", "AdditionalInfo")]
        public AdditionalInfo AdditionalInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdditionalInfo>("TMC.Entities.EntityModels.FK_Requirement_AdditionalInfo", "AdditionalInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdditionalInfo>("TMC.Entities.EntityModels.FK_Requirement_AdditionalInfo", "AdditionalInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdditionalInfo> AdditionalInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdditionalInfo>("TMC.Entities.EntityModels.FK_Requirement_AdditionalInfo", "AdditionalInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdditionalInfo>("TMC.Entities.EntityModels.FK_Requirement_AdditionalInfo", "AdditionalInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Requirement_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TMC.Entities.EntityModels.FK_Requirement_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TMC.Entities.EntityModels.FK_Requirement_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("TMC.Entities.EntityModels.FK_Requirement_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("TMC.Entities.EntityModels.FK_Requirement_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_RequirementCategory_Requirement", "RequirementCategory")]
        public EntityCollection<RequirementCategory> RequirementCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequirementCategory>("TMC.Entities.EntityModels.FK_RequirementCategory_Requirement", "RequirementCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequirementCategory>("TMC.Entities.EntityModels.FK_RequirementCategory_Requirement", "RequirementCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_RequirementLocation_Requirement", "RequirementLocation")]
        public EntityCollection<RequirementLocation> RequirementLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequirementLocation>("TMC.Entities.EntityModels.FK_RequirementLocation_Requirement", "RequirementLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequirementLocation>("TMC.Entities.EntityModels.FK_RequirementLocation_Requirement", "RequirementLocation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="RequirementCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequirementCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequirementCategory object.
        /// </summary>
        /// <param name="requirementCategoryId">Initial value of the RequirementCategoryId property.</param>
        /// <param name="requirementId">Initial value of the RequirementId property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        public static RequirementCategory CreateRequirementCategory(global::System.Int64 requirementCategoryId, global::System.Int64 requirementId, global::System.Int32 categoryId)
        {
            RequirementCategory requirementCategory = new RequirementCategory();
            requirementCategory.RequirementCategoryId = requirementCategoryId;
            requirementCategory.RequirementId = requirementId;
            requirementCategory.CategoryId = categoryId;
            return requirementCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RequirementCategoryId
        {
            get
            {
                return _RequirementCategoryId;
            }
            set
            {
                if (_RequirementCategoryId != value)
                {
                    OnRequirementCategoryIdChanging(value);
                    ReportPropertyChanging("RequirementCategoryId");
                    _RequirementCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RequirementCategoryId");
                    OnRequirementCategoryIdChanged();
                }
            }
        }
        private global::System.Int64 _RequirementCategoryId;
        partial void OnRequirementCategoryIdChanging(global::System.Int64 value);
        partial void OnRequirementCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RequirementId
        {
            get
            {
                return _RequirementId;
            }
            set
            {
                OnRequirementIdChanging(value);
                ReportPropertyChanging("RequirementId");
                _RequirementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequirementId");
                OnRequirementIdChanged();
            }
        }
        private global::System.Int64 _RequirementId;
        partial void OnRequirementIdChanging(global::System.Int64 value);
        partial void OnRequirementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_RequirementCategory_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TMC.Entities.EntityModels.FK_RequirementCategory_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TMC.Entities.EntityModels.FK_RequirementCategory_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TMC.Entities.EntityModels.FK_RequirementCategory_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("TMC.Entities.EntityModels.FK_RequirementCategory_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_RequirementCategory_Requirement", "Requirement")]
        public Requirement Requirement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requirement>("TMC.Entities.EntityModels.FK_RequirementCategory_Requirement", "Requirement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requirement>("TMC.Entities.EntityModels.FK_RequirementCategory_Requirement", "Requirement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Requirement> RequirementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requirement>("TMC.Entities.EntityModels.FK_RequirementCategory_Requirement", "Requirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Requirement>("TMC.Entities.EntityModels.FK_RequirementCategory_Requirement", "Requirement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="RequirementLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequirementLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequirementLocation object.
        /// </summary>
        /// <param name="requirementLocationId">Initial value of the RequirementLocationId property.</param>
        /// <param name="requirementId">Initial value of the RequirementId property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="areaId">Initial value of the AreaId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static RequirementLocation CreateRequirementLocation(global::System.Int64 requirementLocationId, global::System.Int64 requirementId, global::System.Int32 cityId, global::System.String areaId, global::System.DateTime createdOn, global::System.DateTime updatedOn, global::System.Int32 createdBy, global::System.Int32 updatedBy, global::System.Boolean isActive, global::System.Boolean isDeleted)
        {
            RequirementLocation requirementLocation = new RequirementLocation();
            requirementLocation.RequirementLocationId = requirementLocationId;
            requirementLocation.RequirementId = requirementId;
            requirementLocation.CityId = cityId;
            requirementLocation.AreaId = areaId;
            requirementLocation.CreatedOn = createdOn;
            requirementLocation.UpdatedOn = updatedOn;
            requirementLocation.CreatedBy = createdBy;
            requirementLocation.UpdatedBy = updatedBy;
            requirementLocation.IsActive = isActive;
            requirementLocation.IsDeleted = isDeleted;
            return requirementLocation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RequirementLocationId
        {
            get
            {
                return _RequirementLocationId;
            }
            set
            {
                if (_RequirementLocationId != value)
                {
                    OnRequirementLocationIdChanging(value);
                    ReportPropertyChanging("RequirementLocationId");
                    _RequirementLocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RequirementLocationId");
                    OnRequirementLocationIdChanged();
                }
            }
        }
        private global::System.Int64 _RequirementLocationId;
        partial void OnRequirementLocationIdChanging(global::System.Int64 value);
        partial void OnRequirementLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RequirementId
        {
            get
            {
                return _RequirementId;
            }
            set
            {
                OnRequirementIdChanging(value);
                ReportPropertyChanging("RequirementId");
                _RequirementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequirementId");
                OnRequirementIdChanged();
            }
        }
        private global::System.Int64 _RequirementId;
        partial void OnRequirementIdChanging(global::System.Int64 value);
        partial void OnRequirementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                OnAreaIdChanging(value);
                ReportPropertyChanging("AreaId");
                _AreaId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AreaId");
                OnAreaIdChanged();
            }
        }
        private global::System.String _AreaId;
        partial void OnAreaIdChanging(global::System.String value);
        partial void OnAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int32 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int32 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_RequirementLocation_Area", "Area")]
        public Area Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("TMC.Entities.EntityModels.FK_RequirementLocation_Area", "Area").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("TMC.Entities.EntityModels.FK_RequirementLocation_Area", "Area").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Area> AreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("TMC.Entities.EntityModels.FK_RequirementLocation_Area", "Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Area>("TMC.Entities.EntityModels.FK_RequirementLocation_Area", "Area", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_RequirementLocation_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_RequirementLocation_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_RequirementLocation_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_RequirementLocation_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("TMC.Entities.EntityModels.FK_RequirementLocation_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_RequirementLocation_Requirement", "Requirement")]
        public Requirement Requirement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requirement>("TMC.Entities.EntityModels.FK_RequirementLocation_Requirement", "Requirement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requirement>("TMC.Entities.EntityModels.FK_RequirementLocation_Requirement", "Requirement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Requirement> RequirementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requirement>("TMC.Entities.EntityModels.FK_RequirementLocation_Requirement", "Requirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Requirement>("TMC.Entities.EntityModels.FK_RequirementLocation_Requirement", "Requirement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static State CreateState(global::System.Int32 stateId, global::System.Int16 countryId, global::System.String name)
        {
            State state = new State();
            state.StateId = stateId;
            state.CountryId = countryId;
            state.Name = name;
            return state;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                if (_StateId != value)
                {
                    OnStateIdChanging(value);
                    ReportPropertyChanging("StateId");
                    _StateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateId");
                    OnStateIdChanged();
                }
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int16 _CountryId;
        partial void OnCountryIdChanging(global::System.Int16 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_City_State", "City")]
        public EntityCollection<City> City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("TMC.Entities.EntityModels.FK_City_State", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("TMC.Entities.EntityModels.FK_City_State", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_State_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TMC.Entities.EntityModels.FK_State_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TMC.Entities.EntityModels.FK_State_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TMC.Entities.EntityModels.FK_State_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("TMC.Entities.EntityModels.FK_State_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_ListingServiceLocation_State", "ListingServiceLocation")]
        public EntityCollection<ListingServiceLocation> ListingServiceLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingServiceLocation>("TMC.Entities.EntityModels.FK_ListingServiceLocation_State", "ListingServiceLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingServiceLocation>("TMC.Entities.EntityModels.FK_ListingServiceLocation_State", "ListingServiceLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Trend_State", "Trend")]
        public EntityCollection<Trend> Trend
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trend>("TMC.Entities.EntityModels.FK_Trend_State", "Trend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trend>("TMC.Entities.EntityModels.FK_Trend_State", "Trend", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="Trend")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trend : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trend object.
        /// </summary>
        /// <param name="trendId">Initial value of the TrendId property.</param>
        /// <param name="trendTypeId">Initial value of the TrendTypeId property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="postedBy">Initial value of the PostedBy property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Trend CreateTrend(global::System.Int64 trendId, global::System.Int32 trendTypeId, global::System.Int32 categoryId, global::System.Int64 postedBy, global::System.DateTime createdOn, global::System.DateTime updatedOn, global::System.Int64 createdBy, global::System.Int64 updatedBy, global::System.Boolean isActive, global::System.Boolean isDeleted)
        {
            Trend trend = new Trend();
            trend.TrendId = trendId;
            trend.TrendTypeId = trendTypeId;
            trend.CategoryId = categoryId;
            trend.PostedBy = postedBy;
            trend.CreatedOn = createdOn;
            trend.UpdatedOn = updatedOn;
            trend.CreatedBy = createdBy;
            trend.UpdatedBy = updatedBy;
            trend.IsActive = isActive;
            trend.IsDeleted = isDeleted;
            return trend;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TrendId
        {
            get
            {
                return _TrendId;
            }
            set
            {
                if (_TrendId != value)
                {
                    OnTrendIdChanging(value);
                    ReportPropertyChanging("TrendId");
                    _TrendId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrendId");
                    OnTrendIdChanged();
                }
            }
        }
        private global::System.Int64 _TrendId;
        partial void OnTrendIdChanging(global::System.Int64 value);
        partial void OnTrendIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrendTypeId
        {
            get
            {
                return _TrendTypeId;
            }
            set
            {
                OnTrendTypeIdChanging(value);
                ReportPropertyChanging("TrendTypeId");
                _TrendTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrendTypeId");
                OnTrendTypeIdChanged();
            }
        }
        private global::System.Int32 _TrendTypeId;
        partial void OnTrendTypeIdChanging(global::System.Int32 value);
        partial void OnTrendTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsGlobalLevel
        {
            get
            {
                return _IsGlobalLevel;
            }
            set
            {
                OnIsGlobalLevelChanging(value);
                ReportPropertyChanging("IsGlobalLevel");
                _IsGlobalLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGlobalLevel");
                OnIsGlobalLevelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsGlobalLevel;
        partial void OnIsGlobalLevelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsGlobalLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCountryLevel
        {
            get
            {
                return _IsCountryLevel;
            }
            set
            {
                OnIsCountryLevelChanging(value);
                ReportPropertyChanging("IsCountryLevel");
                _IsCountryLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCountryLevel");
                OnIsCountryLevelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCountryLevel;
        partial void OnIsCountryLevelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCountryLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsStateLevel
        {
            get
            {
                return _IsStateLevel;
            }
            set
            {
                OnIsStateLevelChanging(value);
                ReportPropertyChanging("IsStateLevel");
                _IsStateLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsStateLevel");
                OnIsStateLevelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsStateLevel;
        partial void OnIsStateLevelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsStateLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCityLevel
        {
            get
            {
                return _IsCityLevel;
            }
            set
            {
                OnIsCityLevelChanging(value);
                ReportPropertyChanging("IsCityLevel");
                _IsCityLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCityLevel");
                OnIsCityLevelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCityLevel;
        partial void OnIsCityLevelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCityLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int16> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int16> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StateId;
        partial void OnStateIdChanging(Nullable<global::System.Int32> value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CityId;
        partial void OnCityIdChanging(Nullable<global::System.Int32> value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                OnAreaIdChanging(value);
                ReportPropertyChanging("AreaId");
                _AreaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AreaId");
                OnAreaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AreaId;
        partial void OnAreaIdChanging(Nullable<global::System.Int32> value);
        partial void OnAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AbuseCount
        {
            get
            {
                return _AbuseCount;
            }
            set
            {
                OnAbuseCountChanging(value);
                ReportPropertyChanging("AbuseCount");
                _AbuseCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AbuseCount");
                OnAbuseCountChanged();
            }
        }
        private Nullable<global::System.Int32> _AbuseCount;
        partial void OnAbuseCountChanging(Nullable<global::System.Int32> value);
        partial void OnAbuseCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> LikeCount
        {
            get
            {
                return _LikeCount;
            }
            set
            {
                OnLikeCountChanging(value);
                ReportPropertyChanging("LikeCount");
                _LikeCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LikeCount");
                OnLikeCountChanged();
            }
        }
        private Nullable<global::System.Int64> _LikeCount;
        partial void OnLikeCountChanging(Nullable<global::System.Int64> value);
        partial void OnLikeCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DislikeCount
        {
            get
            {
                return _DislikeCount;
            }
            set
            {
                OnDislikeCountChanging(value);
                ReportPropertyChanging("DislikeCount");
                _DislikeCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DislikeCount");
                OnDislikeCountChanged();
            }
        }
        private Nullable<global::System.Int64> _DislikeCount;
        partial void OnDislikeCountChanging(Nullable<global::System.Int64> value);
        partial void OnDislikeCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsVerified
        {
            get
            {
                return _IsVerified;
            }
            set
            {
                OnIsVerifiedChanging(value);
                ReportPropertyChanging("IsVerified");
                _IsVerified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVerified");
                OnIsVerifiedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsVerified;
        partial void OnIsVerifiedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PostedBy
        {
            get
            {
                return _PostedBy;
            }
            set
            {
                OnPostedByChanging(value);
                ReportPropertyChanging("PostedBy");
                _PostedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedBy");
                OnPostedByChanged();
            }
        }
        private global::System.Int64 _PostedBy;
        partial void OnPostedByChanging(global::System.Int64 value);
        partial void OnPostedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int64 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int64 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int64 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int64 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Trend_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_Trend_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_Trend_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("TMC.Entities.EntityModels.FK_Trend_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("TMC.Entities.EntityModels.FK_Trend_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Trend_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TMC.Entities.EntityModels.FK_Trend_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TMC.Entities.EntityModels.FK_Trend_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("TMC.Entities.EntityModels.FK_Trend_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("TMC.Entities.EntityModels.FK_Trend_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Trend_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TMC.Entities.EntityModels.FK_Trend_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TMC.Entities.EntityModels.FK_Trend_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("TMC.Entities.EntityModels.FK_Trend_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("TMC.Entities.EntityModels.FK_Trend_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Trend_TrendType", "TrendType")]
        public TrendType TrendType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrendType>("TMC.Entities.EntityModels.FK_Trend_TrendType", "TrendType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrendType>("TMC.Entities.EntityModels.FK_Trend_TrendType", "TrendType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TrendType> TrendTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrendType>("TMC.Entities.EntityModels.FK_Trend_TrendType", "TrendType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TrendType>("TMC.Entities.EntityModels.FK_Trend_TrendType", "TrendType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="TrendType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrendType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrendType object.
        /// </summary>
        /// <param name="trendTypeId">Initial value of the TrendTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static TrendType CreateTrendType(global::System.Int32 trendTypeId, global::System.String name, global::System.Boolean isActive)
        {
            TrendType trendType = new TrendType();
            trendType.TrendTypeId = trendTypeId;
            trendType.Name = name;
            trendType.IsActive = isActive;
            return trendType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrendTypeId
        {
            get
            {
                return _TrendTypeId;
            }
            set
            {
                if (_TrendTypeId != value)
                {
                    OnTrendTypeIdChanging(value);
                    ReportPropertyChanging("TrendTypeId");
                    _TrendTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrendTypeId");
                    OnTrendTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _TrendTypeId;
        partial void OnTrendTypeIdChanging(global::System.Int32 value);
        partial void OnTrendTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Trend_TrendType", "Trend")]
        public EntityCollection<Trend> Trend
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trend>("TMC.Entities.EntityModels.FK_Trend_TrendType", "Trend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trend>("TMC.Entities.EntityModels.FK_Trend_TrendType", "Trend", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="userTypeId">Initial value of the UserTypeId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static User CreateUser(global::System.Int64 userId, global::System.String userName, global::System.Int16 userTypeId, global::System.DateTime createdOn, global::System.DateTime updatedOn, global::System.Int64 createdBy, global::System.Int64 updatedBy, global::System.Boolean isActive)
        {
            User user = new User();
            user.UserId = userId;
            user.UserName = userName;
            user.UserTypeId = userTypeId;
            user.CreatedOn = createdOn;
            user.UpdatedOn = updatedOn;
            user.CreatedBy = createdBy;
            user.UpdatedBy = updatedBy;
            user.IsActive = isActive;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int64 _UserId;
        partial void OnUserIdChanging(global::System.Int64 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CityId;
        partial void OnCityIdChanging(Nullable<global::System.Int32> value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaId
        {
            get
            {
                return _AreaId;
            }
            set
            {
                OnAreaIdChanging(value);
                ReportPropertyChanging("AreaId");
                _AreaId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaId");
                OnAreaIdChanged();
            }
        }
        private global::System.String _AreaId;
        partial void OnAreaIdChanging(global::System.String value);
        partial void OnAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PinCode
        {
            get
            {
                return _PinCode;
            }
            set
            {
                OnPinCodeChanging(value);
                ReportPropertyChanging("PinCode");
                _PinCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PinCode");
                OnPinCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _PinCode;
        partial void OnPinCodeChanging(Nullable<global::System.Int32> value);
        partial void OnPinCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 UserTypeId
        {
            get
            {
                return _UserTypeId;
            }
            set
            {
                OnUserTypeIdChanging(value);
                ReportPropertyChanging("UserTypeId");
                _UserTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserTypeId");
                OnUserTypeIdChanged();
            }
        }
        private global::System.Int16 _UserTypeId;
        partial void OnUserTypeIdChanging(global::System.Int16 value);
        partial void OnUserTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int64 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int64 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int64 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int64 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Listing_User", "Listing")]
        public EntityCollection<Listing> Listing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Listing>("TMC.Entities.EntityModels.FK_Listing_User", "Listing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Listing>("TMC.Entities.EntityModels.FK_Listing_User", "Listing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_Requirement_User", "Requirement")]
        public EntityCollection<Requirement> Requirement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Requirement>("TMC.Entities.EntityModels.FK_Requirement_User", "Requirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Requirement>("TMC.Entities.EntityModels.FK_Requirement_User", "Requirement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_User_UserType", "UserType")]
        public UserType UserType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("TMC.Entities.EntityModels.FK_User_UserType", "UserType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("TMC.Entities.EntityModels.FK_User_UserType", "UserType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserType> UserTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("TMC.Entities.EntityModels.FK_User_UserType", "UserType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserType>("TMC.Entities.EntityModels.FK_User_UserType", "UserType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMC.Entities.EntityModels", Name="UserType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserType object.
        /// </summary>
        /// <param name="userTypeId">Initial value of the UserTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UserType CreateUserType(global::System.Int16 userTypeId, global::System.String name)
        {
            UserType userType = new UserType();
            userType.UserTypeId = userTypeId;
            userType.Name = name;
            return userType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 UserTypeId
        {
            get
            {
                return _UserTypeId;
            }
            set
            {
                if (_UserTypeId != value)
                {
                    OnUserTypeIdChanging(value);
                    ReportPropertyChanging("UserTypeId");
                    _UserTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserTypeId");
                    OnUserTypeIdChanged();
                }
            }
        }
        private global::System.Int16 _UserTypeId;
        partial void OnUserTypeIdChanging(global::System.Int16 value);
        partial void OnUserTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMC.Entities.EntityModels", "FK_User_UserType", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("TMC.Entities.EntityModels.FK_User_UserType", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("TMC.Entities.EntityModels.FK_User_UserType", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
